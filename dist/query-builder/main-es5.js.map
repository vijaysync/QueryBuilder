{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/addcard/addcard.component.html","webpack:///src/app/app.component.html","webpack:///src/app/cardlist/cardlist.component.html","webpack:///src/app/description/description.component.html","webpack:///src/app/tab/tab.component.html","webpack:///src/app/addcard/addcard.component.scss","webpack:///src/app/addcard/addcard.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/cardlist/cardlist.component.scss","webpack:///src/app/cardlist/cardlist.component.ts","webpack:///src/app/description/description.component.scss","webpack:///src/app/description/description.component.ts","webpack:///src/app/tab/tab.component.scss","webpack:///src/app/tab/tab.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddcardComponent","setCondition","setEnable","selector","template","routes","AppRoutingModule","imports","forRoot","AppComponent","viewContainerRef","clickCount","encapsulation","None","AppModule","declarations","providers","bootstrap","CardlistComponent","toggleQuery","index","query","operator","Query","QueryName","setQuery","submit","activeInput","List","hideVaribale","setOpenBrace","addIcon","removeIcon","disable","alert","closeIcon","setPosition","setCloseBrace","closebrace","diasble","closeBrace","event","previousIndex","currentIndex","DescriptionComponent","TabComponent","ArrayList","buttonToggle","inputHide","input","selected","buttonHide","addCondition","isEnable","console","log","newCondition","push","EnableIcon","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-icon class=\\\"cursor\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"setCondition()\\\">\\n    add\\n  </mat-icon>\\n  <span class=\\\"set-position\\\">New Condition</span>\\n\\n\";","export default \"<div class=\\\"container\\\">\\n  <mat-card [ngStyle]=\\\"{'background-color': '#f7f9fa'}\\\">\\n    <mat-card-title class=\\\"title\\\">Node Space test</mat-card-title>\\n    <mat-card-content>\\n      <app-tab></app-tab>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\\n\";","export default \"<div class=\\\"tab-height\\\" style=\\\"overflow: auto;\\\">\\n    <div class=\\\"add-link set-border\\\">\\n        <!-- <ng-container *ngTemplateOutlet=\\\"icon; context:{condition: setEnable.newCondition}\\\"></ng-container> -->\\n        <app-addcard [setEnable]=\\\"setEnable.newCondition\\\"></app-addcard>\\n    </div>\\n    <form #temp=\\\"ngForm\\\" (ngSubmit)=\\\"submit(temp)\\\">\\n        <div cdkDropListLockAxis=\\\"y\\\" cdkDropList (cdkDropListDropped)=\\\"drop($event)\\\">\\n            <div *ngFor=\\\"let item of List;let i=index\\\" cdkDrag>\\n                <div *ngIf=\\\"operator[i].buttonHide\\\" mat-stroked-button class=\\\"condition-margin\\\"\\n                    (click)=\\\"toggleQuery(i, operator[i].Query.setQuery)\\\">\\n                    <input type=\\\"button\\\" name=\\\"query{{i}}\\\" class=\\\"form-control\\\"\\n                        [(ngModel)]=\\\"operator[i].Query.QueryName\\\" />\\n                </div>\\n\\n                <div class=\\\"block\\\" [ngStyle]=\\\"{'border-top': item.alert ? '2px solid red' : ''}\\\">\\n                    <ng-container *ngIf=\\\"item.addIcon else enableQuery\\\">\\n                        <mat-icon *ngIf=\\\"item.removeIcon else openbrace\\\" class=\\\"cursor\\\" aria-hidden=\\\"false\\\"\\n                            aria-label=\\\"Example home icon\\\" (click)=\\\"addIcon(i, item.addIcon)\\\">\\n                            add\\n                        </mat-icon>\\n                        <ng-template #openbrace>\\n                            <span class=\\\"query-margin\\\">\\n                                <a href=\\\"javascript:void(0)\\\">&#40;</a>\\n                            </span>\\n                        </ng-template>\\n                    </ng-container>\\n                    <ng-template #enableQuery>\\n                        <div class=\\\"query-position\\\">\\n                            <mat-icon (click)=\\\"setOpenBrace(i, item.addIcon, item.removeIcon, false)\\\">\\n                                block\\n                            </mat-icon>\\n                            <span class=\\\"query-margin\\\"\\n                                (click)=\\\"setOpenBrace(i, item.addIcon, item.removeIcon, true)\\\">&#40;</span>\\n                        </div>\\n                    </ng-template>\\n\\n\\n                    <!-- <select (change)=\\\"select($event, i)\\\" class=\\\"selectStyle\\\">\\n              <option *ngFor=\\\"let ListItem of keyValues; let k=index\\\" value={{k}}>\\n                {{ListItem}}\\n              </option>\\n            </select> -->\\n\\n                    <!-- <mat-form-field appearance=\\\"fill\\\">\\n              <mat-label>Favorite food</mat-label>\\n              <mat-select [(value)]=item.selected>\\n                <mat-option *ngFor=\\\"let food of keyValues;let k=index\\\" value={{k}}>\\n                  {{food}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field> -->\\n\\n\\n                    <span *ngIf=\\\"item.hideVaribale else showInput\\\"\\n                        class=\\\"set-newmargin\\\" [ngStyle]=\\\"{'top': item.addIcon && item.removeIcon ? '11px' : '4px'}\\\"\\n                        (dblclick)=\\\"activeInput(i)\\\">\\n                        {{item.input || 'variable'+i}}\\n                    </span>\\n                    <ng-template #showInput>\\n                        <div class=\\\"input-container\\\">\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"item.input\\\" name=\\\"name{{i}}\\\" class=\\\"set-input\\\" />\\n                        </div>\\n                    </ng-template>\\n                    <ng-container *ngIf=\\\"item.closeIcon else addQuery\\\">\\n                        <mat-icon *ngIf=\\\"item.closeBrace else close\\\" class=\\\"cursor set-right\\\" aria-hidden=\\\"false\\\"\\n                            aria-label=\\\"Example home icon\\\" (click)=\\\"closeIcon(i, item.closeIcon)\\\">\\n                            add\\n                        </mat-icon>\\n                        <ng-template #close>\\n                            <span class=\\\"disable-outline\\\">\\n                                <input type=submit value=\\\")\\\" />\\n                            </span>\\n                        </ng-template>\\n                    </ng-container>\\n                    <ng-template #addQuery>\\n                        <div class=\\\"close-brace\\\">\\n                            <mat-icon (click)=\\\"setCloseBrace(i, item.closeIcon, item.closeBrace, false)\\\">\\n                                block\\n                            </mat-icon>\\n                            <span class=\\\"query-margin\\\"\\n                                (click)=\\\"setCloseBrace(i, item.closeIcon, item.closeBrace, true)\\\">&#41;</span>\\n                        </div>\\n                    </ng-template>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\";","export default \"<div class=\\\"tab-height\\\">\\n    Content 2\\n  </div>\\n\";","export default \"<mat-tab-group dynamicHeight>\\n  <mat-tab label=\\\"Condition\\\">\\n    <div *ngIf=\\\"setEnable.isEnable else block\\\" class=\\\"tab-height set-margin add-link\\\">\\n      <!-- <ng-container *ngTemplateOutlet=\\\"icon; context:{condition: setEnable.addCondition}\\\"></ng-container> -->\\n\\n      <app-addcard [setEnable]=\\\"setEnable.addCondition\\\"> </app-addcard>\\n    </div>\\n    <ng-template #block>\\n\\n      <app-cardlist [setEnable]=\\\"setEnable\\\" [ArrayList]=\\\"ArrayList\\\" [operator]=\\\"operator\\\"></app-cardlist>\\n\\n    </ng-template>\\n\\n  </mat-tab>\\n  <mat-tab label=\\\"Description\\\">\\n    <app-description></app-description>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n\\n\\n<!-- <ng-template #icon let-enable=\\\"condition\\\">\\n    <mat-icon class=\\\"cursor\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"enable()\\\">\\n      add\\n    </mat-icon>\\n    <span class=\\\"set-position\\\">New Condition</span>\\n  </ng-template> -->\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZGNhcmQvYWRkY2FyZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport {  List, ButtonList, QueryData } from '../interface/queryData';\nimport { TabComponent  } from '../tab/tab.component';\n\n@Component({\n  selector: 'app-addcard',\n  templateUrl: './addcard.component.html',\n  styleUrls: ['./addcard.component.scss']\n})\nexport class AddcardComponent implements OnInit {\n\n  @Input('ArrayList') ArrayList: List[];\n  @Input('operator') operator: ButtonList[];\n  @Input('setEnable') setEnable: Function;\n  @ViewChild('TabComponent') addFunction: TabComponent;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setCondition = ()=> {\n    this.setEnable()\n  }\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, ViewChild, ElementRef, OnInit, ViewContainerRef, TemplateRef, QueryList, ViewChildren } from '@angular/core';\nimport { QueryData, List, filter, ButtonList } from './interface/queryData';\n//import { QueryBuilderConfig } from 'angular2-query-builder';\n\nimport { ViewEncapsulation } from '@angular/core';\nimport { startWith, map, switchMap, tap } from 'rxjs/operators'\nimport { from, merge, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    debugger;\n  }\n\n  clickCount = [];\n\n  constructor(\n\n    private viewContainerRef: ViewContainerRef\n  ) { }\n\n  ngOnInit(): void {\n    //console.log(this.viewContainerRef.createEmbeddedView(this.temp), 'template', this.newdiv, 'newdiv', this.cont, 'container');\n  }\n\n\n  // submit(eve: any) {\n  //   if (this.List[0].removeIcon) {\n  //     this.List[0].alert = true\n  //     return\n  //   }\n  //   this.query.resultData = [];\n  //   this.query.arr1 = [];\n  //   this.query.arr2 = [];\n  //   this.query.filterData = [];\n  //   for (let [name, value] of Object.entries(eve.form.value)) {\n  //     if (value === 'or' || value === 'and') {\n  //       this.query.arr1.push(value as string)\n  //     }\n  //     else\n  //       this.query.arr2.push(value as string);\n  //   }\n  //   this.query.arr2.forEach((val, index) => {\n  //     this.query.filterData.push([]);\n  //     this.query.mockData.forEach((val1, index1) => {\n  //       debugger;\n  //       if (!this.List[index].selected) {\n  //         this.List[index].selected = Object.keys(val1)[0]\n  //       }\n  //       if (new RegExp(val).test(val1[this.List[index].selected].toString())) {\n  //         this.query.filterData[index][index1] = val1\n  //       }\n  //     })\n  //   })\n\n  //   this.query.copyData = [...this.query.filterData]\n\n  //   this.query.arr1.filter((val, index) => {\n  //     if (this.query.filterData[index + 1] !== undefined && this.query.filterData[index + 1].length === 0 && this.query.filterData[index + 1][0] === undefined && val === 'and') {\n  //       this.query.copyData[index] = [];\n  //     }\n  //   })\n\n  //   this.query.copyData.map(val => {\n  //     if (val !== undefined) {\n  //       return val\n  //     }\n  //   })\n  //   this.query.resultData = this.query.copyData.flat();\n  //   this.query.resultData = this.query.resultData.filter((val, index, self) =>\n  //     index === self.findIndex((t) => (\n  //       t.name === val.name && t.age === val.age\n  //     ))\n  //   )\n  // }\n  // select(e: any, index: number) {\n  //   debugger;\n  //   this.List[index].selected = this.keyValues[e.target.selectedIndex]\n  // }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n//import { QueryComponent } from './query/query.component';\nimport { FormsModule }   from '@angular/forms';\n//import { QueryBuilderModule } from \"angular2-query-builder\";\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatSelectModule} from '@angular/material/select';\nimport { TabComponent } from './tab/tab.component';\nimport { AddcardComponent } from './addcard/addcard.component';\nimport { CardlistComponent } from './cardlist/cardlist.component';\nimport { DescriptionComponent } from './description/description.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabComponent,\n    AddcardComponent,\n    CardlistComponent,\n    DescriptionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatTabsModule,\n    MatIconModule,\n    MatButtonModule,\n    FormsModule,\n    DragDropModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcmRsaXN0L2NhcmRsaXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, CdkDrag } from '@angular/cdk/drag-drop';\nimport {  List, ButtonList, QueryData } from '../interface/queryData';\n\n\n@Component({\n  selector: 'app-cardlist',\n  templateUrl: './cardlist.component.html',\n  styleUrls: ['./cardlist.component.scss']\n})\nexport class CardlistComponent implements OnInit {\n\n   @Input('ArrayList') List: List[];\n   @Input('operator') operator: ButtonList[];\n   @Input('setEnable') setEnable: QueryData;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n    toggleQuery = (index: number, query: boolean) => {\n\n    this.operator[index].Query.QueryName = query && 'or' || 'and';\n    this.operator[index].Query.setQuery = !query;\n  }\n\n  submit = (e: any)=>{\n    \n  }\n\n\n  activeInput = (index: number) => {\n    this.List[index].hideVaribale = false;\n  }\n\n  setOpenBrace = (index: number, addIcon: boolean, removeIcon: boolean, disable: boolean) => {\n    debugger;\n    this.List[index].addIcon = !addIcon;\n    if (disable) {\n      this.List[index].removeIcon = !removeIcon;\n      this.List[0].alert = false\n    }\n  }\n\n  closeIcon = (index: number, closeIcon: boolean) => {\n    this.List[index].closeIcon = !closeIcon;\n  }\n\n  addIcon = (index: number, addIcon: boolean) => {\n    debugger;\n    this.List[index].addIcon = !addIcon;\n    this.setEnable.setPosition = false;\n  }\n\n  setCloseBrace = (index: number, closeIcon: boolean, closebrace: boolean, diasble: boolean) => {\n    this.List[index].closeIcon = !closeIcon;\n    if (diasble)\n      this.List[index].closeBrace = !closebrace;\n\n  }\n  drop(event: CdkDragDrop<string[]>) {\n    debugger;\n    moveItemInArray(this.List, event.previousIndex, event.currentIndex);\n    //moveItemInArray(this.List, event.currentIndex - 1, event.previousIndex);\n  }\n\n\n  \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rlc2NyaXB0aW9uL2Rlc2NyaXB0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.scss']\n})\nexport class DescriptionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYi90YWIuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {  List, ButtonList, QueryData } from '../interface/queryData';\n\n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ArrayList: List[] = [{\n\n    addIcon: true,\n    buttonToggle: false,\n    closeBrace: true,\n    inputHide: false,\n    hideVaribale: true,\n    removeIcon: true,\n    closeIcon: true,\n    input: '',\n    alert: false,\n    selected: ''\n  }]\n\n  operator: ButtonList[] = [{\n    buttonHide: false,\n    Query: { QueryName: 'and', setQuery: true }\n  }]\n\n  addCondition: Function = () => {\n    this.setEnable.isEnable = false\n    console.log('hi old')\n    //this.keyValues = Object.keys(this.query.mockData[0])\n  }\n\n  newCondition: Function = () => {\n\n    this.ArrayList.push({\n\n      addIcon: true,\n      buttonToggle: false,\n      closeBrace: true,\n      inputHide: false,\n      hideVaribale: true,\n      removeIcon: true,\n      closeIcon: true,\n      input: '',\n\n      alert: false,\n      selected: ''\n    })\n    this.operator.push({\n      buttonHide: true,\n      Query: { QueryName: 'and', setQuery: true },\n    })\n  }\n\n  // toggleQuery = (index: number, query: boolean) => {\n\n  //   this.operator[index].Query.QueryName = query && 'or' || 'and';\n  //   this.operator[index].Query.setQuery = !query;\n  // }\n\n  setEnable: QueryData = {\n    isEnable: true,\n    EnableIcon: false,\n    setPosition: true,\n    newCondition: this.newCondition,\n    addCondition: this.addCondition,\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}